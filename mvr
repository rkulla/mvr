#!/bin/bash
# Usage: mvr <file1> [file2 ...] [dest] | mvr
# Description: Move files to a specified or default temporary directory, or restore them to their original locations.
#   $ mvr foo/file.txt bar/file2.txt       # Moves files to ~/tmp/mvr
#   $ mvr foo/file.txt bar/file2.txt /dest # Moves files to /dest
#   $ mvr                                   # Restores all moved files to their original locations
# Author: Ryan Kulla

# Default temporary directory
DEFAULT_TMP_DIR="$HOME/tmp/mvr"
STATE_FILE="$DEFAULT_TMP_DIR/mvr.txt"

# Ensure default temp directory exists
mkdir -p "$DEFAULT_TMP_DIR"

# Function to move files to a directory
move_files() {
    local dest="$DEFAULT_TMP_DIR"
    local last_arg="${!#}"
    
    # If last argument is a directory, treat it as destination
    if [[ -d "$last_arg" || "$last_arg" == */ ]]; then
        dest="$last_arg"
        set -- "${@:1:$(($#-1))}"  # Remove last argument from file list
    fi
    
    mkdir -p "$dest"
    for file_path in "$@"; do
        abs_path="$(realpath "$file_path")"
        file_name="$(basename "$file_path")"
        
        if [[ ! -f "$abs_path" ]]; then
            echo "Error: File '$file_path' does not exist."
            continue
        fi

        mv "$abs_path" "$dest/"
        echo "$abs_path|$dest" >> "$STATE_FILE"
        echo "Moved '$file_name' to '$dest'"
    done
    echo "Run mvr without args to restore files to their original locations."
}

# Function to restore files
restore_files() {
    if [[ ! -f "$STATE_FILE" ]]; then
        echo "Error: No files to restore."
        exit 1
    fi
    
    local new_state=""
    while IFS='|' read -r orig_path stored_dest; do
        file_name="$(basename "$orig_path")"
        
        if [[ ! -f "$stored_dest/$file_name" ]]; then
            echo "Error: The file '$file_name' is missing from '$stored_dest'."
            new_state+="$orig_path|$stored_dest\n"
            continue
        fi
        
        mkdir -p "$(dirname "$orig_path")"
        mv "$stored_dest/$file_name" "$orig_path"
        echo "Restored '$file_name' to '$orig_path'"
    done < "$STATE_FILE"
    
    echo -e "$new_state" > "$STATE_FILE"
    [[ -z "$new_state" ]] && rm -f "$STATE_FILE"
}

# Main logic
if [[ $# -gt 0 ]]; then
    move_files "$@"
else
    restore_files
fi
